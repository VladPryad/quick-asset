let YAML,fs,path,dirname,_,STELLAR_CONFIG_FILENAME,ASSET_CONFIG_FILENAME;_25b‍.x([["getConfig",()=>getConfig],["getAssets",()=>getAssets]]);_25b‍.w("yaml",[["default",["YAML"],function(v){YAML=v}]]);_25b‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_25b‍.w("path",[["default",["path"],function(v){path=v}],["dirname",["dirname"],function(v){dirname=v}]]);_25b‍.w("lodash",[["default",["_"],function(v){_=v}]]);_25b‍.w("../config.js",[["STELLAR_CONFIG_FILENAME",["STELLAR_CONFIG_FILENAME"],function(v){STELLAR_CONFIG_FILENAME=v}],["ASSET_CONFIG_FILENAME",["ASSET_CONFIG_FILENAME"],function(v){ASSET_CONFIG_FILENAME=v}]]);










const __dirname = path.resolve(dirname(''));

const configFile = fs.readFileSync( path.join(__dirname, STELLAR_CONFIG_FILENAME) , 'utf8')
const config = YAML.parse(configFile);

const assetsFile = fs.readFileSync( path.join(__dirname, ASSET_CONFIG_FILENAME) , 'utf8')
const assets = YAML.parse(assetsFile);

       function getConfig(name) {
    if (!name) return config;
    return config[name];
}

       function getAssets(code) {
    if (!code) return assets.assets;

    if(!_.find(assets.assets, asset => asset.code === code)) throw new Error("No such asset in assetfile!");

    const matches = _.filter(assets.assets, asset => asset.code === code);

    if (matches[1]) return matches;

    return matches[0];
}