let arg,startIssue;_e44‍.x([["cli",()=>cli]]);_e44‍.w("arg",[["default",["arg"],function(v){arg=v}]]);_e44‍.w("./index.js",[["issue",["startIssue"],function(v){startIssue=v}]]);


function parseArgumentsIntoOptions(rawArgs) {
 const args = arg(
   {
     '--populate': Boolean,
     '--issue': Boolean,
     '--all': Boolean,
     '-i': '--issue',
     '-p': '--populate',
     '-a': '--all',
   },
   {
     argv: rawArgs.slice(2),
   }
 );
 return {
   issue: args['--issue'] || false,
   populate: args['--populate'] || false,
   all: args['--all'] || false,
 };
}

       function cli(args) {
    let options = parseArgumentsIntoOptions(args);
    const { all, populate, issue } = options;

    _e44‍.g.console.log(options)

    switch(true) {
        case all:
            console.error("Not implemented");
            break;
        case populate:
            console.error("Not implemented");
            break;
        case issue:
            startIssue();
            break;
        default:
            console.error("No such command");
    }
   }